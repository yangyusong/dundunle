协议不再发送大量数据，只发送必要数据，
当然开始游戏的时候数据较多，players(玩家列表)是要发的，people(人数)不再要map做参数，即知道人数从左到右等于从0数起即可知道安排的位置。两人一房间即开始玩。

协议如下(5条)

登录
客服端到服务器 协议名称 登录（login） 参数 role(角色) name(名称)
服务器到客户端 协议名称 登录（login） 参数  errorno(错误码,0:成功 1:失败) sid(每个玩家唯一id)

开始游戏
客服端到服务器 协议名称 开始游戏（start）  参数 players(玩家列表) people(人数)

做动作
客服端到服务器 协议名称 做动作（act） 参数 sid(每个玩家唯一id) action(动作，0:蹲 1:站)
服务器到客户端 协议名称 做动作（act） 参数 pos(动作者位置) action(动作) times(做了多少次)

下一位
客服端到服务器 协议名称 下一位（next) 参数 sid(自己的sid) pos(点击的位置)
服务器到客户端 协议名称  下一位(next) 参数 pos(点击的位置)

游戏结果
服务器到客户端 游戏结果(result) 参数 pos(赢家位置)

具体看client.js，其中有清晰注释，客户端需要做的就是修改这个文件，在socket.on中的 todo 处理协议函数 处理服务器传过来的数据，在用户发生事件时 调用 sender下的某个函数将数据发到服务器。

再讲解一下，位置为从左到右数起，为0,1,2...接到开始游戏协议（start）即左边第一位需要进行蹲站。蹲站满5次，动画显示可以点击对方。

大家看看自己对哪条协议比较熟或感兴趣赶紧选定，有疑问提群中。自己注释和测试好自己的函数。对接就会比较快。对于client.js不要修改我写的，就在todo的地方加消息处理就好。 动手前读懂协议，明白数据的充分性。 传送的一些数据解释可以看pub.js，直接用里面的常量即可。